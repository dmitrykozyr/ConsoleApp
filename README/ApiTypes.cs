public class A
{
	Есть два архитектурных стиля АПИ:
	- REST
	- RPC - удаленный вызов процедур

	#region REST

	GET								| 1XX информация
	POST	(создать)				| 2XX успех
	PUT		(изменить)				| 3XX перенаправление
	PATCH	(частично изменить)		| 4XX ошибка клиента
	DELETE							| 5XX ошибка сервера

	Передача сообщений в формате JSON (удобнее) или XML
	Передача по HTTP
	Не хранит состояние
	Ответ от сервера может быть кеширован на некоторое время и использоваться без новых запросов
	Многоуровневая (Layered) архитектура - на сервере может быть любое число слоев абстракции

	#endregion

	#region API-протоколы на основе REST

	RESTful(REST:API)
		Сервис, написанный с учетом правил REST
		Контракт REST строится вокруг стандартных методов HTTP (GET, POST, PUT, DELETE) и схемы url
		Клиент получает и отправляет данные на сервер с через формирование запросов по URL адресам
		Используется в микросервисах

	JSON:API
		Контракт о том, что данные с сервера будут приходить в JSON формате
		Данные могут приходить как ответы к REST запросам

	GraphQL
		Если у REST есть ограниченное число эндпоинтов и для получения определенных данных нужно
		сделать много запросов, то здесь он один и мы можем указать, какие данные хотим получить
		Тормозит сервер, т.к. GraphQL нужен, чтобы безшовно общаться с разными БД и для его
		эффективной работы нужно постоянно оптимизировать БД
		Подходит, если пользователь делает много запросов к БД
		Используется в мобильной разработке
		https://www.youtube.com/watch?v=IoLtrxw98So
		БД в проекте GraphQL можно открыть программой DBeaver, выбрав 'Новое соединение' -> 'SqlLite' -> Указать путь к файлу БД 'app.db'
		Тут все запросы имеют тип POST

	#endregion

	#region API-протоколы на основе RPC

	SOAP
		Устаревший формат обмена сообщениями
		Передача сообщений в формате XML
		Передача по протоколу HTTP

		Структура XML-SOAP:
		- Envelope	- определяет сообщение и пространство имен
		- Header	- содержит атрибуты с информацией об безопасности и сетевой маршрутизации
		- Body		- содержит сообщение
		- Fault		- содержит информацию об ошибках, произошедших при обработке сообщения

	JSON-RPC
		Спецификация, как представлять запросы и ответы на странице в формате JSON

	gRPC
		Ссистема удалённого вызова процедур, предоставляющая ф-ии
		- аутентификация (TLS и аутентификации на основе токенов)
		- двунаправленная потоковая передача и управление потоком
		- блокирующие или неблокирующие привязки
		- отмена и тайм-ауты

	#endregion
}