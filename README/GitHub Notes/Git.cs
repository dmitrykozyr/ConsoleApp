// Откат миграции
//git checkout develop
//Remove-Migration
//Update-Database 2021080100_NameOfPreviousMigration
// Проектом по умолчанию сделать проект, работающий с базой
//Add-Migration NameOfNewMigration

// Можно созтаь .bat файл и прописать команды git, после запуска выполнятся одна за другой, коммент ::
init
status
add XXX
add -A              // Добавить все файлы
add -u              // Добавить только обновленные файлы, но не новые
commit dima.txt -m «..»
commit -am          // Добавить только обновленные файлы
checkout XXX.txt    // Отмена изменений в файле
clean -f            // Удалить недобавленные файлы
diff XXX..YYY       // Различия между коммитами
log
pull
push
reset —hard         // Отмена изменений во всех файлах
reset —soft HEAD~1  // Вернуть состояние как перед последним коммитом

// Объединить коммиты
git rebase -i HEAD~5
в vim для ввода нажать I
напротив нужных коммитов вместо pick написать squash
закрыть vim: esc: wq
разрешить конфликты в VS
git rebase --continue
в vim закомментить # ненужные комментарии
git push -f

// Merge - залить develop в свою ветку
// -p удаляет удаленные ветки, которые больше не существуют на удаленном репозитории
git checkout develop
git pull -p
git checkout <branch>
git merge develop
если конфликт - разрешаем, потом git merge --continue
git push -f

// Rebase
git checkout develop
git pull -p
git checkout <branch>
git rebase develop
если конфликт - разрешаем, потом git rebase --continue
git push -f

// Не пулятся изменения из develop
// Проблема с локальным develop - гит перестал трекать изменения в девелопе
// Зайти в SourceTree и удалить develop, потом сделать в консоли git checkout develop
// git pull

// Добавить изменения в существующий коммит, чтобы не делать сквош
в SourceTree перевести изменения в staged
git commit --amend
закрыть vim: esc: wq
git push - f

// Cherry Pick
// Если работаем в одной ветке, а нам нужно перенести себе в ветку изменения из другой ветки, то можно сделать rebase, но он перенесет все коммиты
// Cherry pick позволяет перенести один коммит, нужно только указать его хеш
// Перед этим переключаемся на ветку, в которую хотим влить изменения
git cherry-pick 54debc8

// Force Push
// Git предотвращает перезапись истории центрального репозитория, отклоняя push-запросы, если нельзя выполнить их ускоренное слияние
// Если история удаленного репозитория отличается от вашей истории, необходимо загрузить удаленную ветку командой pull и выполнить ее слияние с локальной веткой командой merge, а затем выполнить команду push
// Флаг --force отменяет это поведение и подгоняет ветку удаленного репозитория под локальную ветку, удаляя вышестоящие изменения, которые могли быть внесены с момента последнего выполнения команды pull
// Использование push оправдано в том случае, когда вы понимаете, что только что опубликованные вами коммиты были неправильными и вы исправили их с помощью команды git commit --amend или интерактивного перебазирования
// При этом прежде, чем использовать опцию --force, вы должны быть уверен, что никто из команды не забирал эти коммиты с помощью команды pull

// Если конфликты после пуша
git fetch
git merge origin/develop
// Разрешаем конфликты в VisualStudio
